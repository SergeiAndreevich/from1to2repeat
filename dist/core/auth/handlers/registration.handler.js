"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registrationHandler = registrationHandler;
const usersService_bll_1 = require("../../../Entity/Users/BLL/usersService.bll");
const ResultObject_type_1 = require("../../types/ResultObject.type");
const httpStatuses_type_1 = require("../../types/httpStatuses.type");
const queryRepo_repository_1 = require("../../dataAcsessLayer/queryRepo.repository");
const createErrorsMessage_function_1 = require("../../errors/createErrorsMessage.function");
function registrationHandler(req, res) {
    return __awaiter(this, void 0, void 0, function* () {
        //–ø—Ä–∏—à–ª–∏ login, email, password
        //204 - –µ—Å–ª–∏ –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã. –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Å–∫–æ—Ä–µ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ—á—Ç—É
        // –∫–æ–¥ –≤ —Å—Å—ã–ª–∫–µ –∫–∞–∫ –∫–≤–µ—Ä–∏-–ø–∞—Ä–∞–º–µ—Ç—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ª—è–ª—è–ª—è?code=yourcode
        //–Ω—É –∏ 400, –µ—Å–ª—É —é–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å (–∞ —Ç–∞–∫–∂–µ –µ—Å–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–Ω–ø—É—Ç)
        //console.log('=== REGISTRATION DEBUG ===');
        //console.log('1. NODE_ENV:', process.env.NODE_ENV);
        const userInput = req.body;
        //console.log('2. User input:', userInput);
        //–ø–µ—Ä–µ–¥–∞–µ–º –∏—Ö –≤ –ë–õ–õ –∏ –ø—Ä–æ—Å–∏–º —Å–æ–∑–¥–∞—Ç—å —é–∑–µ—Ä–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è id
        const newUserResult = yield usersService_bll_1.usersService.createUser(userInput);
        //console.log('3. Service result status:', newUserResult);
        //—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —é–∑–µ—Ä–∞
        if (newUserResult.status === ResultObject_type_1.ResultStatuses.alreadyExist) {
            res.status(httpStatuses_type_1.httpStatus.BadRequest).send((0, createErrorsMessage_function_1.createErrorsMessages)(newUserResult.errorMessage));
            return;
        }
        const user = yield queryRepo_repository_1.queryRepo.findUserByIdOrFail(newUserResult.data.id);
        //console.log('4. User found:', user);
        if (!user) {
            res.sendStatus(httpStatuses_type_1.httpStatus.ExtraError);
            return;
        }
        //console.log('5. üîí Sending response WITHOUT code for production');
        res.sendStatus(httpStatuses_type_1.httpStatus.NoContent);
        //res.sendStatus(204)
        // ‚≠ê –í –¢–ï–°–¢–û–í–û–ô –°–†–ï–î–ï –í–û–ó–í–†–ê–©–ê–ï–ú –ö–û–î ‚≠ê
        //if (process.env.NODE_ENV === 'test') {
        //     res.status(httpStatus.NoContent).send({
        //         message: 'confirmation code is sent to your email',
        //         confirmationCode: newUserResult.data!.code // ‚Üê –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        //      });
        // } else {
        //     res.status(httpStatus.NoContent).send({
        //         message: 'confirmation code is sent to your email'
        //     });
        // }
        //res.status(httpStatus.NoContent).send({message: 'confirmation code is sent to your email'})
    });
}
